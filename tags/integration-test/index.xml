<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>integration test on Ayache Khettar</title>
    <link>https://www.cirta.dev/tags/integration-test/</link>
    <description>Recent content in integration test on Ayache Khettar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/ribice&#34;&gt;Emir Ribic&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Sat, 25 Apr 2020 19:05:51 +0300</lastBuildDate>
    
	<atom:link href="https://www.cirta.dev/tags/integration-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Running integration tests against databases</title>
      <link>https://www.cirta.dev/post/dockerdb/</link>
      <pubDate>Sat, 25 Apr 2020 19:05:51 +0300</pubDate>
      
      <guid>https://www.cirta.dev/post/dockerdb/</guid>
      <description>Introduction No body can underestimate the value of running integration tests in your local environment before pushing the changes to a continuous integration pipeline. We often write backend services that connects to various databases. In this brief post I am going to show you how to write an integration test which requires connection to mongodb or a postgres database.
I have written a Go library that can be embedded in your integration test and will ensure the followings</description>
    </item>
    
  </channel>
</rss>